#!/usr/bin/env bash

# acquire information
REPO="$(svn info | grep "^URL: " | perl -pe 's/^URL: //; s/trunk$//')"
NAME="$(python setup.py --name)"
VERSION="$(python setup.py --version)"
MODDIR="/net/noble/vol1/software/modules/${NAME}"

perl -i~ -pe "s/PKG_VERSION = \".*\"/PKG_VERSION = \"$VERSION\"/" \
    install.py install.tmpl

svn commit
svn cp . "$REPO/tags/release-$VERSION" -m "tagging release $VERSION"

# build docs
pushd doc && (make html latex && make -C _build/latex all-pdf && evince _build/latex/*.pdf)
popd

# make release source
python setup.py release # alias for egg_info --no-svn-revision --tag-build '' sdist bdist_egg

echo "Current version is $VERSION"
echo "What is the new version?"

read NEXTVERSION

perl -i~ -pe "s/__version__ = \".*\"/__version__ = \"$NEXTVERSION\"/" \
    setup.py

perl -i~ -pe "s/PKG_VERSION = \".*\"/PKG_VERSION = \"$NEXTVERSION\"/" \
    install.py install.tmpl

mv NEWS NEWS~
echo -e "$NEXTVERSION:\n\n\n" | cat - NEWS~ > NEWS

svn commit -m "increment release"

# install
pushd dist
tar zxvf "${NAME}-${VERSION}.tar.gz"
pushd "${NAME}-${VERSION}"

install-python-module "$PWD"
ssh n001 install-python-module "$PWD"

# setup module file
OLDVERSION="$(ls -1 "$MODDIR" | sort -t . -k 1,1n -k 2,2n -k 3,3n | tail -n 1)"

perl -pe "s/^(set.*_VERSION.*)$OLDVERSION/\${1}$VERSION/g" "$MODDIR/$OLDVERSION" > "$MODDIR/$VERSION"

echo "$PWD"
