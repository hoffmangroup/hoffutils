#!/usr/bin/env bash

## release: release new version of Python software

## $Revision$
## Copyright 2010-2011 Michael M. Hoffman <mmh1@uw.edu>

set -o nounset
set -o pipefail
set -o errexit
set -x

if [ $# != 0 ]; then
    echo usage: "$0"
    exit 2
fi

# acquire information
TRUNK_URL="$(svnurl)"
REPO="${TRUNK_URL%/trunk}"

[ "$REPO" != "$TRUNK_URL" ]

NAME="$(python setup.py --name)"
VERSION="$(python setup.py --version)"
MODDIR="/net/noble/vol1/software/modules/${NAME}"

if [ -e install.py ]; then
    perl -i~ -pe "s/PKG_VERSION = \".*\"/PKG_VERSION = \"$VERSION\"/" \
        install.py install.tmpl
fi

svn commit

TAG_URL="$REPO/tags/release-$VERSION"

if svn ls "$TAG_URL" 2>/dev/null; then
    echo svn rm -m "brownbag" "$TAG_URL"
fi
svn cp . "$TAG_URL" -m "tagging release $VERSION"

# build docs
if [ -d doc ]; then
    pushd doc && (make html latexpdf man && evince _build/latex/*.pdf)
    popd
fi

# make release source
python setup.py release # alias for egg_info --no-svn-revision --tag-build '' sdist bdist_egg

echo "Current version is $VERSION"
echo "What is the new version?"

read NEXTVERSION

perl -i~ -pe "s/__version__ = \".*\"/__version__ = \"$NEXTVERSION\"/" \
    setup.py

if [ -e install.py ]; then
    perl -i~ -pe "s/PKG_VERSION = \".*\"/PKG_VERSION = \"$NEXTVERSION\"/" \
        install.py install.tmpl
fi

mv NEWS NEWS~ 2>&1 || touch NEWS~
echo -e "$NEXTVERSION:\n\n\n" | cat - NEWS~ > NEWS

svn commit -m "increment release"

# install
pushd dist
tar zxvf "${NAME}-${VERSION}.tar.gz"
pushd "${NAME}-${VERSION}"

install-python-module "$PWD"
ssh histidine install-python-module "$PWD"

if [ -d "$MODDIR" ]; then
# setup module file
    OLDVERSION="$(ls -1 "$MODDIR" | sort -t . -k 1,1n -k 2,2n -k 3,3n | tail -n 1)"

    perl -pe "s/^(set.*_VERSION.*)$OLDVERSION/\${1}$VERSION/g" "$MODDIR/$OLDVERSION" > "$MODDIR/$VERSION"
else
    mkdir -p "$MODDIR"
    echo "module file does not exist" >&2
    "$VISUAL" "$MODDIR/$VERSION"
fi

echo "to ship: ship $PWD"
